import React, { FC } from 'react';
export interface Props extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {
    isOpen: boolean;
    onClose: () => unknown;
    children: React.ReactNode;
    container?: Element;
    closeOnOverlayClick?: boolean;
    showTopBar?: boolean;
    showCloseIcon?: boolean;
    bottomBar?: React.ReactNode;
    title?: React.ReactNode;
    closeOnEsc?: boolean;
    showBottomBarBorder?: boolean;
    onCloseTransitionFinish?: () => unknown;
    centered?: boolean;
    size?: 'small' | 'medium' | 'large' | 'fit-horizontally' | 'auto';
    responsiveFullScreen?: boolean;
}
declare type OverlayProps = Required<Pick<Props, 'isOpen' | 'centered' | 'closeOnOverlayClick' | 'onClose'>> & Pick<Props, 'onCloseTransitionFinish' | 'container'>;
export declare const ModalOverlay: FC<OverlayProps>;
declare const Modal: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export default Modal;
